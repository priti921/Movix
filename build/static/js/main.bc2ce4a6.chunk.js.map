{"version":3,"sources":["components/navbar.js","Key.js","components/MovieSlider.js","components/TrendsNow.js","components/PopularNow.js","components/TopRated.js","components/about.js","components/Upcoming.js","page/Home.js","components/Movies/PopularMovies.js","components/Movies/TrendingMovies.js","components/Movies/TopratedMovies.js","components/Movies/UpcomingMovies.js","page/Movies.js","components/Series/PopularSeries.js","components/Series/TrendingSeries.js","components/Series/TopratedSeries.js","components/Series/AiringSeries.js","page/Series.js","components/MovieDetails.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","className","to","type","Key","AutoplaySlider","withAutoplay","AwesomeSlider","MovieSlider","useState","Data","setData","Genre","setGenre","Loading","setLoading","useEffect","a","Axios","get","then","res","data","results","slice","console","log","genres","catch","err","error","fetchData","topMovies","map","movie","movieGenres","forEach","genre","id","genre_ids","push","name","src","backdrop_path","alt","title","overview","viewBox","xmlns","d","fill","vote_average","release_date","play","cancelOnInteraction","interval","infinite","TrendsNow","DataSeries","setDataSeries","trendingMovies","trending","poster_path","trendingSeries","series","first_air_date","PopularNow","About","Upcoming","Home","TopRated","PopularMovies","Movies","TrendingMovies","TopratedMovies","UpcomingMovies","PopularSeries","TrendingSeries","Series","AiringSeries","TopratedSeries","MovieDetails","useParams","style","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA0BeA,EAjBA,WACX,OACI,cAAC,IAAD,UACI,sBAAKC,UAAU,SAAf,UACI,mBAAGA,UAAU,QAAb,SAAqB,cAAC,IAAD,CAAMC,GAAG,IAAT,qBACrB,uBAAOD,UAAU,SAASE,KAAK,SAC/B,qBAAIF,UAAU,WAAd,UACI,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,UAAT,sBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,UAAT,sBACJ,kD,8BClBLE,EADH,mC,kDCQNC,G,MAAiBC,IAAaC,MAkGrBC,MAhGf,WAAuB,MAEKC,mBAAS,IAFd,mBAEZC,EAFY,KAENC,EAFM,OAIOF,mBAAS,IAJhB,mBAIZG,EAJY,KAILC,EAJK,OAKWJ,oBAAS,GALpB,mBAKZK,EALY,KAKHC,EALG,KAMnBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,8DAAiEf,EAAjE,2FACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAMK,QAAQC,IAAIhB,MACvBU,MAAK,WAEFF,IAAMC,IAAN,gEAAmEf,EAAnE,oBACKgB,MAAK,SAACC,GAAD,OAASR,EAASQ,EAAIC,KAAKK,WAChCP,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAMD,SAErCD,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAMD,MAZpB,2CAAH,qDAiBfE,KAED,IAKH,IAAIC,EAAYlB,EAAW,qBAAKb,UAAU,UAAf,wBACvBS,EAAKuB,KAAI,SAACC,GAIN,IAAIC,EAAc,GAclB,OAbAvB,EAAMwB,SAAQ,SAACC,GACPA,EAAMC,KAAOJ,EAAMK,UAAU,IAC7BJ,EAAYK,KAAKH,EAAMI,MAEvBJ,EAAMC,KAAOJ,EAAMK,UAAU,IAC7BJ,EAAYK,KAAKH,EAAMI,MAEvBJ,EAAMC,KAAOJ,EAAMK,UAAU,IAC7BJ,EAAYK,KAAKH,EAAMI,SAM3B,sBAAKxC,UAAU,QAAf,UACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,eAAeyC,IAAG,8CAAyCR,EAAMS,eAAiBC,IAAKV,EAAMW,UAEhH,qBAAI5C,UAAU,gBAAd,UACI,oBAAIA,UAAU,cAAd,SAA6BiC,EAAMW,QACnC,oBAAI5C,UAAU,iBAAd,SAAgCiC,EAAMY,WACtC,sBAAK7C,UAAU,oBAAf,UACI,qBAAKA,UAAU,OAAO8C,QAAQ,sBAAsBC,MAAM,6BAA1D,SAAuF,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp6B,oBAAIjD,UAAU,eAAd,SAA8BiC,EAAMiB,eACpC,oBAAIlD,UAAU,cAAd,SAA6BkC,EAAY,KACxCA,EAAY,IAAM,oBAAIlC,UAAU,cAAd,SAA6BkC,EAAY,KAC3DA,EAAY,IAAM,oBAAIlC,UAAU,cAAd,SAA6BkC,EAAY,KAC5D,oBAAIlC,UAAU,qBAAd,SAAoCiC,EAAMkB,aAAa5B,MAAM,EAAG,QAEpE,qBAAKvB,UAAU,sBAAf,SACI,kDAhBgBiC,EAAMI,OAyB9C,OACI,mCAEMxB,EAAW,qBAAKb,UAAU,UAAf,yBAET,cAACI,EAAD,CAAgBJ,UAAU,SACtBoD,MAAM,EACNC,qBAAqB,EACrBC,SAAU,IACVC,UAAU,EAJd,SAMKxB,OCdNyB,MA1Ef,WAAqB,MAEOhD,mBAAS,IAFhB,mBAEVC,EAFU,KAEJC,EAFI,OAGmBF,mBAAS,IAH5B,mBAGViD,EAHU,KAGEC,EAHF,OAIalD,oBAAS,GAJtB,mBAIVK,EAJU,KAIDC,EAJC,KAQjBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,mEAAsEf,IACvEgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,uBAMRX,IAAMC,IAAN,gEAAmEf,IACpEgB,MAAK,SAACC,GAAD,OAASsC,EAActC,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QACtDI,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAMD,MARpB,2CAAH,qDAYfE,KAGD,IAGH,IAAI6B,EAAiB9C,EAAW,qBAAKb,UAAU,UAAf,wBAC5BS,EAAKuB,KAAI,SAAC4B,GACN,OAAO,cAAC,IAAD,CAAM3D,GAAE,iBAAY2D,EAASvB,IAA7B,SAEH,sBAAKrC,UAAU,aAAf,UACI,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCmB,EAASC,aAAelB,IAAKiB,EAAShB,QACrH,oBAAI5C,UAAU,mBAAd,SAAkC4D,EAAShB,QAC3C,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC4D,EAAST,aAAa5B,MAAM,EAAG,KAChE,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiC4D,EAASV,oBANjBU,EAASvB,SAclDyB,EAAiBL,EACjBA,EAAWzB,KAAI,SAAC+B,GACZ,OAAO,sBAAK/D,UAAU,aAAf,UACH,qBAAKyC,IAAG,8CAAyCsB,EAAOF,aAAelB,IAAKoB,EAAOnB,MAAO5C,UAAU,sBACpG,oBAAIA,UAAU,mBAAd,SAAkC+D,EAAOvB,OACzC,qBAAIxC,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC+D,EAAOC,eAAezC,MAAM,EAAG,KAChE,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiC+D,EAAOb,oBANRa,EAAO1B,OAUlD,2CAEL,OACI,sBAAKrC,UAAU,eAAf,UACI,oBAAIA,UAAU,oBAAd,0BACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACK2D,IAEL,oBAAI3D,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACK8D,QCGFG,MAxEf,WAAsB,MAEMzD,mBAAS,IAFf,mBAEXC,EAFW,KAELC,EAFK,OAGkBF,mBAAS,IAH3B,mBAGXiD,EAHW,KAGCC,EAHD,OAIYlD,oBAAS,GAJrB,mBAIXK,EAJW,KAIFC,EAJE,KAQlBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,8DAAiEf,EAAjE,2FACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,uBAORX,IAAMC,IAAN,2DAA8Df,EAA9D,kHACDgB,MAAK,SAACC,GAAD,OAASsC,EAActC,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QACtDI,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAMD,MATpB,2CAAH,qDAafE,KAGD,IAGH,IAAI6B,EAAiB9C,EAAW,qBAAKb,UAAU,UAAf,wBAC5BS,EAAKuB,KAAI,SAAC4B,GACN,OAAO,sBAAK5D,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCmB,EAASC,aAAelB,IAAKiB,EAAShB,QACrH,oBAAI5C,UAAU,mBAAd,SAAkC4D,EAAShB,QAC3C,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC4D,EAAST,aAAa5B,MAAM,EAAG,KAChE,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiC4D,EAASV,oBANVU,EAASvB,OAarDyB,EAAiBL,EACjBA,EAAWzB,KAAI,SAAC+B,GACZ,OAAO,sBAAK/D,UAAU,aAAf,UACH,qBAAKyC,IAAG,8CAAyCsB,EAAOF,aAAelB,IAAKoB,EAAOnB,MAAO5C,UAAU,sBACpG,oBAAIA,UAAU,mBAAd,SAAkC+D,EAAOvB,OACzC,qBAAIxC,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC+D,EAAOC,eAAezC,MAAM,EAAG,KAChE,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiC+D,EAAOb,oBANRa,EAAO1B,OAUlD,2CAEL,OACI,sBAAKrC,UAAU,2BAAf,UACI,oBAAIA,UAAU,oBAAd,yBACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACK2D,IAEL,oBAAI3D,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACK8D,QCKFG,MAvEf,WAAsB,MAEMzD,mBAAS,IAFf,mBAEXC,EAFW,KAELC,EAFK,OAGkBF,mBAAS,IAH3B,mBAGXiD,EAHW,KAGCC,EAHD,OAIYlD,oBAAS,GAJrB,mBAIXK,EAJW,KAIFC,EAJE,KAOlBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,+DAAkEf,EAAlE,2BACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,uBAORX,IAAMC,IAAN,4DAA+Df,EAA/D,2BACDgB,MAAK,SAACC,GAAD,OAASsC,EAActC,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QACtDI,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAMD,MATpB,2CAAH,qDAafE,KAGD,IAGH,IAAI6B,EAAiB9C,EAAW,qBAAKb,UAAU,UAAf,wBAC5BS,EAAKuB,KAAI,SAAC4B,GACN,OAAO,sBAAK5D,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCmB,EAASC,aAAelB,IAAKiB,EAAShB,QACrH,oBAAI5C,UAAU,mBAAd,SAAkC4D,EAAShB,QAC3C,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC4D,EAAST,aAAa5B,MAAM,EAAG,KAChE,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiC4D,EAASV,oBANVU,EAASvB,OAarDyB,EAAiBL,EACjBA,EAAWzB,KAAI,SAAC+B,GACZ,OAAO,sBAAK/D,UAAU,aAAf,UACH,qBAAKyC,IAAG,8CAAyCsB,EAAOF,aAAelB,IAAKoB,EAAOnB,MAAO5C,UAAU,sBACpG,oBAAIA,UAAU,mBAAd,SAAkC+D,EAAOvB,OACzC,qBAAIxC,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC+D,EAAOC,eAAezC,MAAM,EAAG,KAChE,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiC+D,EAAOb,oBANRa,EAAO1B,OAUlD,2CAEL,OACI,sBAAKrC,UAAU,yBAAf,UACI,oBAAIA,UAAU,oBAAd,uBACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACK2D,IAEL,oBAAI3D,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACK8D,QCrCFI,MAlCf,WACI,OACI,sBAAKlE,UAAU,aAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,mBAAGA,UAAU,mBAAb,mBACA,wBAAOA,UAAU,cAAjB,UACI,+BACI,uCACA,yCACA,+CAEJ,+BACI,8CACA,4CACA,8CAEJ,+BACI,gDACA,2CACA,oDAEJ,+BACI,0CACA,sDAMZ,mBAAGA,UAAU,YAAb,sDC2BGmE,MAlDf,WAAoB,MAEQ3D,mBAAS,IAFjB,mBAETC,EAFS,KAEHC,EAFG,OAGcF,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAOhBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,8DAAiEf,EAAjE,2BACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDASfE,KAGD,IAGH,IAAI6B,EAAiB9C,EAAW,qBAAKb,UAAU,UAAf,wBAC5BS,EAAKuB,KAAI,SAAC4B,GACN,OAAO,sBAAK5D,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCmB,EAASC,aAAelB,IAAKiB,EAAShB,QACrH,oBAAI5C,UAAU,mBAAd,SAAkC4D,EAAShB,QAC3C,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC4D,EAAST,aAAa5B,MAAM,EAAG,KAChE,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiC4D,EAASV,oBANVU,EAASvB,OAczD,OACI,sBAAKrC,UAAU,wBAAf,UACI,oBAAIA,UAAU,oBAAd,sBACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACK2D,QC7BFS,MAbf,WACI,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCgCGC,MA7Cf,WAAyB,MAEG9D,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,OAGSF,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,KAMrBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,8DAAiEf,EAAjE,2FACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,KAED,IAGH,IAAIwC,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMW,QACxC,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAMkB,aAAa5B,MAAM,EAAG,KAC7D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,8BAAf,UACI,oBAAIA,UAAU,oBAAd,yBACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCMFA,MA7Cf,WAAyB,MAES9D,oBAAS,GAFlB,mBAEdK,EAFc,KAELC,EAFK,OAGGN,mBAAS,IAHZ,mBAGdC,EAHc,KAGRC,EAHQ,KAMrBK,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,mEAAsEf,IACvEgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,KAED,IAGH,IAAIwC,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMW,QACxC,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAMkB,aAAa5B,MAAM,EAAG,KAC7D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,eAAf,UACI,oBAAIA,UAAU,oBAAd,sBACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCMFA,MA7Cf,WAAyB,MAES9D,oBAAS,GAFlB,mBAEdK,EAFc,KAELC,EAFK,OAGGN,mBAAS,IAHZ,mBAGdC,EAHc,KAGRC,EAHQ,KAMrBK,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,+DAAkEf,EAAlE,2BACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,KAED,IAGH,IAAIwC,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMW,QACxC,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAMkB,aAAa5B,MAAM,EAAG,KAC7D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,+BAAf,UACI,oBAAIA,UAAU,oBAAd,uBACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCMFA,MA7Cf,WAAyB,MAES9D,oBAAS,GAFlB,mBAEdK,EAFc,KAELC,EAFK,OAGGN,mBAAS,IAHZ,mBAGdC,EAHc,KAGRC,EAHQ,KAMrBK,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,8DAAiEf,EAAjE,2BACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,KAED,IAGH,IAAIwC,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMW,QACxC,qBAAI5C,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAMkB,aAAa5B,MAAM,EAAG,KAC7D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,+BAAf,UACI,oBAAIA,UAAU,oBAAd,sBACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCtBFC,MAbf,WACI,OACI,sBAAKvE,UAAU,cAAf,UACI,sBAAMA,UAAU,cAChB,cAAC,EAAD,IACA,cAACwE,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,QCiCGC,MA7Cf,WAAyB,MAEGnE,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,OAGSF,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,KAMrBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,0DAA6Df,EAA7D,2BACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,GACAN,QAAQC,IAAIhB,KACb,IAGH,IAAI6D,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMO,OACxC,qBAAIxC,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAM+B,eAAezC,MAAM,EAAG,KAC/D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,8BAAf,UACI,oBAAIA,UAAU,oBAAd,+BACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCMFM,MA7Cf,WAA0B,MAEEpE,mBAAS,IAFX,mBAEfC,EAFe,KAETC,EAFS,OAGQF,oBAAS,GAHjB,mBAGfK,EAHe,KAGNC,EAHM,KAMtBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,gEAAmEf,IACpEgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,GACAN,QAAQC,IAAIhB,KACb,IAGH,IAAI6D,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMO,OACxC,qBAAIxC,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAM+B,eAAezC,MAAM,EAAG,KAC/D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,8BAAf,UACI,oBAAIA,UAAU,oBAAd,gCACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCMFM,MA7Cf,WAA0B,MAEEpE,mBAAS,IAFX,mBAEfC,EAFe,KAETC,EAFS,OAGQF,oBAAS,GAHjB,mBAGfK,EAHe,KAGNC,EAHM,KAMtBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,4DAA+Df,EAA/D,2BACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,GACAN,QAAQC,IAAIhB,KACb,IAGH,IAAI6D,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMO,OACxC,qBAAIxC,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAM+B,eAAezC,MAAM,EAAG,KAC/D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,iDAAf,UACI,oBAAIA,UAAU,oBAAd,gCACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCMFK,MA7Cf,WAAyB,MAEGnE,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,OAGSF,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,KAMrBC,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEAERC,IAAMC,IAAN,6DAAgEf,EAAhE,2BACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,KAAKC,QAAQC,MAAM,EAAG,QAChDJ,MAAK,kBAAML,GAAW,MACtBa,OAAM,SAACC,GAAD,OAASJ,QAAQK,MAAOD,MALrB,2CAAH,qDAQfE,GACAN,QAAQC,IAAIhB,KACb,IAGH,IAAI6D,EAAgBzD,EAAW,qBAAKb,UAAU,UAAf,wBAC3BS,EAAKuB,KAAI,SAACC,GACN,OAAO,sBAAKjC,UAAU,aAAf,UACH,qBAAKA,UAAU,oBAAoByC,IAAG,8CAAyCR,EAAM4B,aAAelB,IAAKV,EAAMW,QAC/G,oBAAI5C,UAAU,mBAAd,SAAkCiC,EAAMO,OACxC,qBAAIxC,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCiC,EAAM+B,eAAezC,MAAM,EAAG,KAC/D,qBAAKvB,UAAU,uBAAuB8C,QAAQ,sBAAsBC,MAAM,6BAA1E,SAAuG,sBAAMC,EAAE,g0BAAg0BC,KAAK,cACp7B,oBAAIjD,UAAU,kBAAd,SAAiCiC,EAAMiB,oBANPjB,EAAMI,OAYtD,OACI,sBAAKrC,UAAU,8BAAf,UACI,oBAAIA,UAAU,oBAAd,2BACA,oBAAIA,UAAU,4BAAd,oBACA,qBAAKA,UAAU,sBAAf,SACKsE,QCvBFO,MAdf,WACI,OACI,sBAAK7E,UAAU,cAAf,UACI,sBAAMA,UAAU,cAChB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC8E,EAAD,IACA,cAACC,EAAD,IAEA,cAAC,EAAD,QCiBGC,MA3Bf,WAAwB,IAEd3C,EAAO4C,cAAP5C,GAFc,EAII7B,mBAAS,IAJb,mBAIbC,EAJa,KAIPC,EAJO,KAmBpB,OAZAK,qBAAU,YACO,uCAAG,sBAAAC,EAAA,sEACNC,IAAMC,IAAN,6CAAgDmB,EAAhD,oBAA8DlC,EAA9D,oBACDgB,MAAK,SAACC,GAAD,OAASV,EAAQU,EAAIC,SAFnB,2CAAH,qDAIbS,KAED,IAIHN,QAAQC,IAAIhB,GAER,sBAAKT,UAAU,qBAAf,UACI,mBAAGkF,MAAO,CAAE,MAAS,SAArB,kBACA,mBAAGA,MAAO,CAAE,MAAS,SAArB,SAAiCzE,EAAKmC,YCEnCuC,MAnBf,WACE,OACE,cAAC,IAAD,UAEE,sBAAKnF,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoF,KAAK,IAAIC,OAAK,EAACC,UAAWlB,IACjC,cAAC,IAAD,CAAOgB,KAAK,aAAaE,UAAWN,IACpC,cAAC,IAAD,CAAOI,KAAK,UAAUC,OAAK,EAACC,UAAWf,IACvC,cAAC,IAAD,CAAOa,KAAK,UAAUC,OAAK,EAACC,UAAWT,aCXlCU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtE,MAAK,YAAkD,IAA/CuE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc2ce4a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Headroom from 'react-headroom';\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst navbar = () => {\r\n    return (\r\n        <Headroom>\r\n            <div className=\"navbar\">\r\n                <p className=\"Movix\"><Link to=\"/\">Movix</Link></p>\r\n                <input className=\"search\" type=\"text\" />\r\n                <ul className=\"navlinks\">\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/Movies\">Movies</Link></li>\r\n                    <li><Link to=\"/Series\">Series</Link></li>\r\n                    <li>My list</li>\r\n                </ul>\r\n            </div>\r\n        </Headroom>\r\n    )\r\n}\r\n\r\nexport default navbar;","const Key = '53d5f666ce2f8beb85e15e9e4facf9ae'\r\nexport default Key;","import React, { useState, useEffect } from 'react'\r\nimport Key from '../Key';\r\nimport Axios from 'axios';\r\nimport AwesomeSlider from 'react-awesome-slider'\r\nimport withAutoplay from 'react-awesome-slider/dist/autoplay';\r\nimport 'react-awesome-slider/dist/styles.css';\r\n\r\n\r\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\r\n\r\nfunction MovieSlider() {\r\n    // top movies right now data\r\n    const [Data, setData] = useState([]);\r\n    // genre id and names\r\n    const [Genre, setGenre] = useState([]);\r\n    const [Loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // calling api for getting popular movies\r\n            await Axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${Key}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 10)))\r\n                .then(() => console.log(Data))\r\n                .then(() => {\r\n                    // calling api for getting genre \r\n                    Axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${Key}&language=en-US`)\r\n                        .then((res) => setGenre(res.data.genres))\r\n                        .then(() => setLoading(false))\r\n                        .catch((err) => console.error(err))\r\n                })\r\n                .catch((err) => console.error(err))\r\n\r\n\r\n\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    let topMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n\r\n\r\n            // get genre names from the data collected from api call\r\n            let movieGenres = [];\r\n            Genre.forEach((genre) => {\r\n                if (genre.id === movie.genre_ids[0]) {\r\n                    movieGenres.push(genre.name)\r\n                };\r\n                if (genre.id === movie.genre_ids[1]) {\r\n                    movieGenres.push(genre.name)\r\n                }\r\n                if (genre.id === movie.genre_ids[2]) {\r\n                    movieGenres.push(genre.name)\r\n                }\r\n\r\n            })\r\n\r\n            return (\r\n                <div className=\"movie\" key={movie.id}>\r\n                    <div className=\"overlay\">\r\n                        <img className=\"movie-poster\" src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path}`} alt={movie.title} />\r\n                    </div>\r\n                    <ul className=\"movie-details\">\r\n                        <li className=\"movie-title\">{movie.title}</li>\r\n                        <li className=\"movie-overview\">{movie.overview}</li>\r\n                        <div className=\"movie-details-bar\">\r\n                            <svg className=\"star\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                            <li className=\"movie-rating\">{movie.vote_average}</li>\r\n                            <li className=\"movie-genre\">{movieGenres[0]}</li>\r\n                            {movieGenres[1] && <li className=\"movie-genre\">{movieGenres[1]}</li>}\r\n                            {movieGenres[2] && <li className=\"movie-genre\">{movieGenres[2]}</li>}\r\n                            <li className=\"movie-release-year\">{movie.release_date.slice(0, 4)}</li>\r\n                        </div>\r\n                        <div className=\"watch-movie-buttons\">\r\n                            <button>Watch</button>\r\n                        </div>\r\n                    </ul>\r\n                </div >\r\n            )\r\n        })\r\n    )\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            { Loading ? (<div className=\"loading\" > Loading...</div>) : (\r\n\r\n                <AutoplaySlider className=\"slider\"\r\n                    play={true}\r\n                    cancelOnInteraction={true} // should stop playing on user interaction\r\n                    interval={100}\r\n                    infinite={true}\r\n                >\r\n                    {topMovies}\r\n                </AutoplaySlider>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieSlider;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../Key';\r\n\r\n\r\n\r\n\r\nfunction TrendsNow() {\r\n    // movie data collected from api call\r\n    const [Data, setData] = useState([])\r\n    const [DataSeries, setDataSeries] = useState([]);\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n\r\n    // called once \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for trending movies \r\n            await Axios.get(`https://api.themoviedb.org/3/trending/movie/week?api_key=${Key}`)\r\n                .then((res) => setData(res.data.results.slice(0, 12)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n            await Axios.get(`https://api.themoviedb.org/3/trending/tv/week?api_key=${Key}`)\r\n                .then((res) => setDataSeries(res.data.results.slice(0, 12)))\r\n                .catch((err) => console.error(err))\r\n\r\n\r\n        }\r\n        fetchData();\r\n\r\n\r\n    }, []);\r\n\r\n    //    TRENDING MOVIES\r\n    let trendingMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((trending) => {\r\n            return <Link to={`/movie/${trending.id}`}>\r\n\r\n                <div className=\"movie-card\" key={trending.id}>\r\n                    <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${trending.poster_path}`} alt={trending.title} />\r\n                    <li className=\"movie-card-title\">{trending.title}</li>\r\n                    <ul className=\"movie-card-details\">\r\n                        <li className=\"movie-card-year\">{trending.release_date.slice(0, 4)}</li>\r\n                        <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                        <li className=\"movie-card-star\">{trending.vote_average}</li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </Link>\r\n        })\r\n    )\r\n    // TRENDING TV SERIES\r\n    let trendingSeries = DataSeries ? (\r\n        DataSeries.map((series) => {\r\n            return <div className=\"movie-card\" key={series.id}>\r\n                <img src={`https://image.tmdb.org/t/p/original/${series.poster_path}`} alt={series.title} className=\"movie-card-poster\" />\r\n                <li className=\"movie-card-title\">{series.name}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{series.first_air_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{series.vote_average}</li>\r\n                </ul>\r\n            </div>\r\n        })\r\n    ) : (<p>loading...</p>)\r\n\r\n    return (\r\n        <div className=\"trending-now\">\r\n            <h2 className=\"treding-now-title\">Trending now</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {trendingMovies}\r\n            </div>\r\n            <h3 className=\"trending-now-movies-title\">series</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {trendingSeries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendsNow\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../Key';\r\n\r\n\r\n\r\n\r\nfunction PopularNow() {\r\n    // movie data collected from api call\r\n    const [Data, setData] = useState([])\r\n    const [DataSeries, setDataSeries] = useState([]);\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n\r\n    // called once \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${Key}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 12)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n            // api call for popular\r\n            await Axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${Key}&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false`)\r\n                .then((res) => setDataSeries(res.data.results.slice(0, 12)))\r\n                .catch((err) => console.error(err))\r\n\r\n\r\n        }\r\n        fetchData();\r\n\r\n\r\n    }, []);\r\n\r\n    //    TRENDING MOVIES\r\n    let trendingMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((trending) => {\r\n            return <div className=\"movie-card\" key={trending.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${trending.poster_path}`} alt={trending.title} />\r\n                <li className=\"movie-card-title\">{trending.title}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{trending.release_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{trending.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    // TRENDING TV SERIES\r\n    let trendingSeries = DataSeries ? (\r\n        DataSeries.map((series) => {\r\n            return <div className=\"movie-card\" key={series.id}>\r\n                <img src={`https://image.tmdb.org/t/p/original/${series.poster_path}`} alt={series.title} className=\"movie-card-poster\" />\r\n                <li className=\"movie-card-title\">{series.name}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{series.first_air_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{series.vote_average}</li>\r\n                </ul>\r\n            </div>\r\n        })\r\n    ) : (<p>loading...</p>)\r\n\r\n    return (\r\n        <div className=\"trending-now popular-now\">\r\n            <h2 className=\"treding-now-title\">Popular now</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {trendingMovies}\r\n            </div>\r\n            <h3 className=\"trending-now-movies-title\">series</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {trendingSeries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularNow;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../Key';\r\n\r\n\r\n\r\n\r\nfunction PopularNow() {\r\n    // movie data collected from api call\r\n    const [Data, setData] = useState([])\r\n    const [DataSeries, setDataSeries] = useState([]);\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n    // called once \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 12)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n            // api call for popular\r\n            await Axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setDataSeries(res.data.results.slice(0, 12)))\r\n                .catch((err) => console.error(err))\r\n\r\n\r\n        }\r\n        fetchData();\r\n\r\n\r\n    }, []);\r\n\r\n    //    TRENDING MOVIES\r\n    let trendingMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((trending) => {\r\n            return <div className=\"movie-card\" key={trending.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${trending.poster_path}`} alt={trending.title} />\r\n                <li className=\"movie-card-title\">{trending.title}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{trending.release_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{trending.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    // TRENDING TV SERIES\r\n    let trendingSeries = DataSeries ? (\r\n        DataSeries.map((series) => {\r\n            return <div className=\"movie-card\" key={series.id}>\r\n                <img src={`https://image.tmdb.org/t/p/original/${series.poster_path}`} alt={series.title} className=\"movie-card-poster\" />\r\n                <li className=\"movie-card-title\">{series.name}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{series.first_air_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{series.vote_average}</li>\r\n                </ul>\r\n            </div>\r\n        })\r\n    ) : (<p>loading...</p>)\r\n\r\n    return (\r\n        <div className=\"trending-now top-rated\">\r\n            <h2 className=\"treding-now-title\">Top rated</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {trendingMovies}\r\n            </div>\r\n            <h3 className=\"trending-now-movies-title\">series</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {trendingSeries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularNow;","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about-info\">\r\n            <div className=\"logo-and-table\">\r\n                <p className=\"Movix about-logo\">Movix</p>\r\n                <table className=\"about-table\">\r\n                    <tr>\r\n                        <th>Legal</th>\r\n                        <th>Account</th>\r\n                        <th>Newsletter</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Terms of use</td>\r\n                        <td>My Account</td>\r\n                        <td>Subscribe</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Privacy Policy</td>\r\n                        <td>Watchlist</td>\r\n                        <td>Get latest news</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Security</td>\r\n                        <td>Collections</td>\r\n\r\n                    </tr>\r\n                </table>\r\n\r\n            </div>\r\n            <p className=\"copyright\">&copy; 2020 Movix. All rights reserved</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../Key';\r\n\r\n\r\n\r\n\r\nfunction Upcoming() {\r\n    // movie data collected from api call\r\n    const [Data, setData] = useState([]);\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n\r\n    // called once \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 12)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n\r\n        }\r\n        fetchData();\r\n\r\n\r\n    }, []);\r\n\r\n    //    TRENDING MOVIES\r\n    let trendingMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((trending) => {\r\n            return <div className=\"movie-card\" key={trending.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${trending.poster_path}`} alt={trending.title} />\r\n                <li className=\"movie-card-title\">{trending.title}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{trending.release_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{trending.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    // TRENDING TV SERIES\r\n\r\n    return (\r\n        <div className=\"trending-now upcoming\">\r\n            <h2 className=\"treding-now-title\">Upcoming</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {trendingMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upcoming;","import React from 'react'\r\n// components\r\nimport MovieSlider from '../components/MovieSlider';\r\nimport TrendingNow from '../components/TrendsNow';\r\nimport PopularNow from '../components/PopularNow';\r\nimport TopRated from '../components/TopRated';\r\nimport About from '../components/about';\r\nimport Upcoming from '../components/Upcoming';\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <MovieSlider />\r\n            <TrendingNow />\r\n            <PopularNow />\r\n            <TopRated />\r\n            <Upcoming />\r\n            <About />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction PopularMovies() {\r\n    // data\r\n    const [Data, setData] = useState([])\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${Key}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.title}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.release_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now popular-movies\">\r\n            <h2 className=\"treding-now-title\">Popular now</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularMovies\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction PopularMovies() {\r\n    // data\r\n    const [Loading, setLoading] = useState(true);\r\n    const [Data, setData] = useState([])\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/trending/movie/week?api_key=${Key}`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.title}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.release_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now\">\r\n            <h2 className=\"treding-now-title\">Trending</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularMovies\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction PopularMovies() {\r\n    // data\r\n    const [Loading, setLoading] = useState(true);\r\n    const [Data, setData] = useState([])\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.title}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.release_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now toprated-movies\">\r\n            <h2 className=\"treding-now-title\">Top rated</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularMovies","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction PopularMovies() {\r\n    // data\r\n    const [Loading, setLoading] = useState(true);\r\n    const [Data, setData] = useState([])\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.title}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.release_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now upcoming-movies\">\r\n            <h2 className=\"treding-now-title\">Upcoming</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularMovies\r\n\r\n","\r\nimport React from 'react'\r\nimport About from '../components/about';\r\n\r\n// components\r\nimport PopularMovies from '../components/Movies/PopularMovies';\r\nimport TrendingMovies from '../components/Movies/TrendingMovies';\r\nimport TopratedMovies from '../components/Movies/TopratedMovies';\r\nimport UpcomingMovies from '../components/Movies/UpcomingMovies';\r\nfunction Movies() {\r\n    return (\r\n        <div className=\"movies-page\">\r\n            <span className=\"black-box\"></span>\r\n            <PopularMovies />\r\n            <TrendingMovies />\r\n            <TopratedMovies />\r\n            <UpcomingMovies />\r\n            <About />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction PopularSeries() {\r\n    // data\r\n    const [Data, setData] = useState([])\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/tv/popular?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n        console.log(Data);\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.name}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.first_air_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now popular-movies\">\r\n            <h2 className=\"treding-now-title\">Popular Tv series</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularSeries","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction TrendingSeries() {\r\n    // data\r\n    const [Data, setData] = useState([])\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/trending/tv/week?api_key=${Key}`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n        console.log(Data);\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.name}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.first_air_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now popular-movies\">\r\n            <h2 className=\"treding-now-title\">Trending Tv series</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendingSeries","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction TrendingSeries() {\r\n    // data\r\n    const [Data, setData] = useState([])\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n        console.log(Data);\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.name}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.first_air_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now popular-movies toprated-tv-series\">\r\n            <h2 className=\"treding-now-title\">Toprated Tv series</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendingSeries","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\n// api key\r\nimport Key from '../../Key';\r\n\r\nfunction PopularSeries() {\r\n    // data\r\n    const [Data, setData] = useState([])\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n    // called once\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // api call for popular movies \r\n            await Axios.get(`https://api.themoviedb.org/3/tv/on_the_air?api_key=${Key}&language=en-US&page=1`)\r\n                .then((res) => setData(res.data.results.slice(0, 18)))\r\n                .then(() => setLoading(false))\r\n                .catch((err) => console.error((err)))\r\n\r\n        }\r\n        fetchData();\r\n        console.log(Data);\r\n    }, []);\r\n\r\n    // Popular movies mapping\r\n    let PopularMovies = Loading ? (<div className=\"loading\">Loading...</div>) : (\r\n        Data.map((movie) => {\r\n            return <div className=\"movie-card\" key={movie.id}>\r\n                <img className=\"movie-card-poster\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} />\r\n                <li className=\"movie-card-title\">{movie.name}</li>\r\n                <ul className=\"movie-card-details\">\r\n                    <li className=\"movie-card-year\">{movie.first_air_date.slice(0, 4)}</li>\r\n                    <svg className=\"movie-card-star-icon\" viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" fill=\"#ffc107\" /></svg>\r\n                    <li className=\"movie-card-star\">{movie.vote_average}</li>\r\n\r\n                </ul>\r\n            </div>\r\n        })\r\n    )\r\n    return (\r\n        <div className=\"trending-now popular-movies\">\r\n            <h2 className=\"treding-now-title\">Airing series</h2>\r\n            <h3 className=\"trending-now-movies-title\">movies</h3>\r\n            <div className=\"trending-now-movies\">\r\n                {PopularMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularSeries","import React from 'react'\r\nimport PopularSeries from '../components/Series/PopularSeries'\r\nimport TrendingSeries from '../components/Series/TrendingSeries'\r\nimport TopratedSeries from '../components/Series/TopratedSeries'\r\nimport AiringSeries from '../components/Series/AiringSeries';\r\nimport About from '../components/about';\r\n\r\nfunction Series() {\r\n    return (\r\n        <div className=\"series-page\">\r\n            <span className=\"black-box\"></span>\r\n            <PopularSeries />\r\n            <TrendingSeries />\r\n            <AiringSeries />\r\n            <TopratedSeries />\r\n\r\n            <About />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Series\r\n","import { React, useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nimport Key from '../Key';\r\n\r\n\r\nfunction MovieDetails() {\r\n    // getting  id from url parameter\r\n    let { id } = useParams();\r\n    // saving fetched data\r\n    const [Data, setData] = useState([]);\r\n\r\n    // fetch movie details\r\n    useEffect(() => {\r\n        let fetchData = async () => {\r\n            await Axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${Key}&language=en-US`)\r\n                .then((res) => setData(res.data))\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    console.log(Data);\r\n    return (\r\n        <div className=\"Movie-details-page\">\r\n            <p style={{ \"color\": \"black\" }}>TEST</p>\r\n            <p style={{ \"color\": \"black\" }}>{Data.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//components\nimport Navbar from './components/navbar';\nimport Home from './page/Home'\nimport Movies from './page/Movies';\nimport Series from './page/Series';\nimport MovieDetails from './components/MovieDetails';\n\n\nfunction App() {\n  return (\n    <Router>\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar />\n        </header>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/movie/:id\" component={MovieDetails} />\n          <Route path=\"/Movies\" exact component={Movies} />\n          <Route path=\"/Series\" exact component={Series} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}